server.port=8088

# main config
spring.application.name=provider

# This means we are using one Nacos for both config center and registry center
spring.cloud.nacos.server-addr=192.168.1.111:8848
# cluster mode:
#spring.cloud.nacos.server-addr=127.0.0.1:8848,127.0.0.1:8858,127.0.0.1:8868

# true: temporary instance, false: persistance instance
#spring.cloud.nacos.discovery.ephemeral=true
# This is true by default. if switching to false, need to stop Nacos first and then delete all the things under ${nacos_dir}/data/protocol/raft/naming_instance_metadata/   don't do this step will cause exception
spring.cloud.nacos.discovery.ephemeral=false

# or we can use  spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848  as a seperate discover server

# profile of the config, has the highest priority
# Hi Brian, When running in production env, don't assign config profile here. put '-Dspring.profiles.active=dev' in vm option.
spring.profiles.active=dev

# set file decompose format. not suffix, doesn't for composing file name.
#spring.cloud.nacos.config.file-extension=yaml

# can not match by part of the name, must use exactly the same full name with the config on Nacos, aka name+extension. eg: common.properties, not common
# the bigger the number in [x] is, the higher priority it gets.
# main config always has the highest priority
spring.cloud.nacos.config.extension-configs[0].data-id=common.properties
#spring.cloud.nacos.config.extension-configs[1].data-id=common.properties
#spring.cloud.nacos.config.extension-configs[2].data-id=common.properties
# or we can use spring.cloud.nacos.config.shared-configs[x].data-id=common.properties difference see my doc
spring.cloud.nacos.config.extension-configs[0].refresh=true


# Nacos credential
spring.cloud.nacos.username=nacos
spring.cloud.nacos.password=nacos

spring.cloud.nacos.discovery.cluster-name=Miami-cluster